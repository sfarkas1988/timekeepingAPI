<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Project;
use Doctrine\ORM\EntityRepository;

/**
 * ProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectRepository extends EntityRepository
{

    /**
     * @param $userId
     * @return Project[]
     */
    public function getProjectsByUser($userId)
    {
        $query = $this->getEntityManager()->createQuery(
            'SELECT p FROM AppBundle:Project p WHERE p.user=:userId'
        );

        $query->setParameter('userId', $userId);
        return $query->getResult();
    }

    /**
     * @param Project $project
     * @return Project
     */
    public function saveProject(Project $project)
    {
        if ($project->getId() !== null) {
            $this->getEntityManager()->merge($project);
        } else {
            $this->getEntityManager()->persist($project);
        }

        $this->getEntityManager()->flush();
        return $project;
    }

    /**
     * @param int $id
     * @param int $userId
     * @return null|Project
     */
    public function getProject($id, $userId)
    {
        return $this->findOneBy(array(
            'user' => $userId,
            'id' => $id
        ));
    }

    /**
     * @param $id
     * @param $userId
     * @return Project|null
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getProjectWithWorkTime($id, $userId)
    {
        $query = $this->getEntityManager()->createQuery(
            'SELECT
                p, w
             FROM AppBundle:Project p
             LEFT JOIN p.workTimes w
             WHERE
                p.user=:userId AND
                p.id=:id
             ORDER BY w.id DESC'
        );

        $query->setParameter('id', $id);
        $query->setParameter('userId', $userId);
        return $query->getOneOrNullResult();
    }
}
